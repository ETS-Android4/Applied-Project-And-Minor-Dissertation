version: '3.7'
services:
  mysql:
    container_name: mysql
    command: --default-authentication-plugin=mysql_native_password
    image: mysql:latest
    environment:
      MYSQL_ROOT_PASSWORD: password
      MYSQL_DATABASE: fitnessbuddy
    volumes:
      - mysql:/var/lib/mysql
    ports:
      - "3307:3306"
    networks:
      - mysql
    restart: unless-stopped

  adminer:
    container_name: adminer
    image: adminer:latest
    environment:
      ADMINER_DEFAULT_SERVER: mysql
    ports:
        - "8081:8080"
    networks:
        - mysql
        - postgres
    restart: unless-stopped

  postgres-fraud:
    container_name: postgres-fraud
    image: postgres
    environment:
      POSTGRES_USER: admin
      POSTGRES_DB: "fraud"
      POSTGRES_PASSWORD: password
      PGDATA: /data/postgres
    volumes:
      - postgres-fraud:/data/postgres
    ports:
      - "5432:5432"
    networks:
      - postgres
    restart: unless-stopped

  postgres-notifications:
    container_name: postgres-notifications
    image: postgres
    environment:
      POSTGRES_USER: admin
      POSTGRES_DB: "notifications"
      POSTGRES_PASSWORD: password
      PGDATA: /data/postgres
    volumes:
      - postgres-notifications:/data/postgres
    ports:
      - "5433:5432"
    networks:
      - postgres
    restart: unless-stopped

  zipkin:
    image: openzipkin/zipkin
    container_name: zipkin
    #environment:
      #- STORAGE_TYPE=mysql
      # Point the zipkin at the storage backend
      #- MYSQL_HOST=mysql
      # Uncomment to enable scribe
      # - SCRIBE_ENABLED=true
      # Uncomment to enable self-tracing
      # - SELF_TRACING_ENABLED=true
      # Uncomment to enable debug logging
      # - JAVA_OPTS=-Dlogging.level.zipkin2=DEBUG
    ports:
      # Port used for the Zipkin UI and HTTP Api
      - "9411:9411"
      # Uncomment if you set SCRIBE_ENABLED=true
      # - 9410:9410
    networks:
      - backend

  rabbitmq:
    image: rabbitmq:3.9.11-management-alpine
    container_name: rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672" #management port we can use the management console
    networks:
      - backend

  eureka-server:
    image: kekesuke/eureka-server:latest
    container_name: eureka-server
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    networks:
      - backend
    ports:
      - "8761:8761"
    depends_on:
      - zipkin

  api-gateway:
    image: kekesuke/api-gateway:latest
    container_name: api-gateway
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    networks:
      - backend
    ports:
      - "8084:8084"
    depends_on:
      - zipkin
      - eureka-server

  authentication:
    image: kekesuke/authentication:latest
    container_name: authentication
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    networks:
      - mysql
      - backend
    ports:
      - "8080:8080"
    depends_on:
      - mysql
      - zipkin
      - eureka-server
      - rabbitmq


  fraud:
    image: kekesuke/fraud:latest
    container_name: fraud
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    networks:
      - backend
      - postgres
    ports:
      - "8082:8082"
    depends_on:
      - zipkin
      - eureka-server
      - postgres-fraud
      - rabbitmq

  notification:
    image: kekesuke/notification:latest
    container_name: notification
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    networks:
      - backend
      - postgres
    ports:
      - "8083:8083"
    depends_on:
      - zipkin
      - eureka-server
      - postgres-notifications
      - rabbitmq

#
#  pgadmin:
#    container_name: pgadmin
#    image: dpage/pgadmin4
#    environment:
#      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL:-pgadmin4@pgadmin.org}
#      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD:-admin}
#      PGADMIN_CONFIG_SERVER_MODE: 'False'
#    volumes:
#      - pgadmin:/var/lib/pgadmin
#    ports:
#      - "5050:80"
#    networks:
#      - postgres
#    restart: unless-stopped
networks:
  postgres:
    driver: bridge
  mysql:
    driver: bridge
  backend:
    driver: bridge

volumes:
  postgres-fraud:
  postgres-notifications:
  mysql:
  admininer: